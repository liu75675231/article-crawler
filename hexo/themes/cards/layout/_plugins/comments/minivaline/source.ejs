<% if (theme.comments.use === 'minivaline') { %>
    <script>
        function loadComment() {
            let e, i;
            (e = document.createElement("script")).src = '<%= url_for(theme.vendors.minivaline || 'https://cdn.jsdelivr.net/npm/minivaline@2.7.5/dist/MiniValine.min.js') %>',
            document.body.appendChild(e);
            e.onload = () => {
                var minivalineConfig = <%- JSON.stringify(theme.comments.minivaline) %>;
                minivalineConfig.el = '#minivaline_container';
                for (var i in minivalineConfig) {
                    if (minivalineConfig[i] === null) delete minivalineConfig[i];
                }
                new MiniValine(minivalineConfig);
            };
        }
    
        var runningOnBrowser = typeof window !== "undefined";
        var isBot = runningOnBrowser && !("onscroll" in window) || typeof navigator !== "undefined" && /(gle|ing|ro|msn)bot|crawl|spider|yand|duckgo/i.test(navigator.userAgent);
        var supportsIntersectionObserver = runningOnBrowser && "IntersectionObserver" in window;
    
        setTimeout(function () {
            if (!isBot && supportsIntersectionObserver) {
                var comment_observer = new IntersectionObserver(function(entries) {
                    if (entries[0].isIntersecting) {
                        loadComment();
                        comment_observer.disconnect();
                    }
                }, { threshold: [0] });
                comment_observer.observe(document.getElementById('comment'));
            } else {
                loadComment();
            }
        }, 1);
    </script>
<% } %>